openapi: 3.0.3
info:
  title: YouTube Curator v2 API
  description: |
    Backend API for YouTube Curator v2 - a self-hosted application for monitoring YouTube channels and sending email notifications about new videos.
    
    This API allows you to:
    - Manage subscribed YouTube channels
    - Configure the check interval for video monitoring
    - Retrieve videos with some metadata
    - Mark videos as watched
  version: 2.0.0
  contact:
    name: YouTube Curator v2
servers:
  - url: http://localhost:8080/api
    description: Development server
paths:
  /channels:
    get:
      summary: List all subscribed channels
      description: Retrieve a list of all YouTube channels currently being monitored
      tags:
        - Channels
      responses:
        '200':
          description: Successfully retrieved channels
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelsResponse'
              example:
                channels:
                  - id: "UCAYF6ZY9gWBR1GW3R7PX7yw"
                    title: "Majuular"
                    createdAt: "2024-01-15T10:00:00Z"
                    isActive: true
                    videoCount: 0
                  - id: "UCkpKS8M7MaZAFewtUz24K3A"
                    title: "GitHub"
                    createdAt: "2024-01-15T10:00:00Z"
                    isActive: true
                    videoCount: 0
                totalCount: 2
                lastUpdated: "2024-01-15T10:00:00Z"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Add a new channel
      description: |
        Add a new YouTube channel to monitor. Accepts either:
        - A direct YouTube channel URL (https://www.youtube.com/channel/CHANNEL_ID)
        - A channel ID directly (starts with 'UC')
        
        Note: Custom URLs (@username, /c/, /user/) are not supported and will return an error.
      tags:
        - Channels
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChannelRequest'
            examples:
              channel_url:
                summary: Using channel URL
                value:
                  url: "https://www.youtube.com/channel/UCAYF6ZY9gWBR1GW3R7PX7yw"
              channel_id:
                summary: Using channel ID directly
                value:
                  url: "UCAYF6ZY9gWBR1GW3R7PX7yw"
      responses:
        '201':
          description: Channel successfully added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelResponse'
              example:
                id: "UCAYF6ZY9gWBR1GW3R7PX7yw"
                title: "Majuular"
                createdAt: "2024-01-15T10:00:00Z"
                isActive: true
                videoCount: 0
        '400':
          description: Bad request - invalid URL format or unsupported URL type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                invalid_format:
                  summary: Invalid channel ID format
                  value:
                    message: "invalid channel ID format. Channel IDs should start with 'UC' and be 24 characters long"
                unsupported_url:
                  summary: Unsupported URL type
                  value:
                    message: "@username URLs are not supported. Please provide the channel ID directly (starts with 'UC')"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /channels/import:
    post:
      summary: Import multiple channels
      description: Import a list of YouTube channels into the monitoring system. Supports batch import.
      tags:
        - Channels
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportChannelsRequest'
            example:
              channels:
                - url: "https://www.youtube.com/channel/UC_x5XG1OV2P6uZZ5FSM9Ttw"
                  title: "Google for Developers"
                - url: "https://www.youtube.com/@github"
      responses:
        '201':
          description: All channels successfully imported
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportChannelsResponse'
              example:
                imported:
                  - id: "UC_x5XG1OV2P6uZZ5FSM9Ttw"
                    title: "Google for Developers"
                    createdAt: "2024-01-15T10:00:00Z"
                    isActive: true
                    videoCount: 0
                  - id: "UCkpKS8M7MaZAFewtUz24K3A"
                    title: "GitHub"
                    createdAt: "2024-01-15T10:00:00Z"
                    isActive: true
                    videoCount: 0
                failed: []
        '207':
          description: Partial import - some channels failed to import
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportChannelsResponse'
              example:
                imported:
                  - id: "UC_x5XG1OV2P6uZZ5FSM9Ttw"
                    title: "Google for Developers"
                    createdAt: "2024-01-15T10:00:00Z"
                    isActive: true
                    videoCount: 0
                failed:
                  - channel:
                      url: "https://www.youtube.com/user/invalidchannel"
                      title: "Invalid Channel"
                    error: "invalid channel ID format. Channel IDs should start with 'UC' and be 24 characters long"
        '400':
          description: Bad request - invalid request body or no channels provided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                message: "At least one channel is required"
        '500':
          description: Internal server error (should ideally be 207 if possible for individual failures)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /channels/{channelId}:
    delete:
      summary: Remove a channel
      description: Remove a YouTube channel from monitoring
      tags:
        - Channels
      parameters:
        - name: channelId
          in: path
          required: true
          description: The YouTube channel ID to remove
          schema:
            type: string
            pattern: '^UC[a-zA-Z0-9_-]{22}$'
          example: "UCAYF6ZY9gWBR1GW3R7PX7yw"
      responses:
        '204':
          description: Channel successfully removed
        '400':
          description: Bad request - invalid channel ID format
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /config/interval:
    get:
      summary: Get check interval
      description: Retrieve the current check interval for monitoring YouTube channels
      tags:
        - Configuration
      responses:
        '200':
          description: Successfully retrieved check interval
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigInterval'
              example:
                interval: "1h"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Set check interval
      description: |
        Set the check interval for monitoring YouTube channels.
        Uses Go duration format (e.g., "30m", "1h", "2h30m").
        
        Valid range: 1 minute to 24 hours.
      tags:
        - Configuration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigInterval'
            examples:
              one_hour:
                summary: Check every hour
                value:
                  interval: "1h"
              thirty_minutes:
                summary: Check every 30 minutes
                value:
                  interval: "30m"
              two_hours:
                summary: Check every 2 hours
                value:
                  interval: "2h"
      responses:
        '200':
          description: Check interval successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigInterval'
              example:
                interval: "1h"
        '400':
          description: Bad request - invalid interval format or out of range
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                invalid_format:
                  summary: Invalid duration format
                  value:
                    message: "Invalid interval format. Use Go duration format (e.g., '1h', '30m', '2h30m')"
                out_of_range:
                  summary: Interval out of valid range
                  value:
                    message: "Interval must be at least 1 minute"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /newsletter/run:
    post:
      summary: Manually trigger the newsletter run
      description: |
        This endpoint triggers the process that checks for new videos and sends the newsletter. 
        Optionally, a `channelId` can be provided in the request body to trigger the run only 
        for that specific channel, useful for debugging.
      tags:
        - Newsletter
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                channelId:
                  type: string
                  description: Optional YouTube channel ID to trigger the newsletter run for a specific channel.
                  pattern: '^UC[a-zA-Z0-9_-]{22}$'
                  example: "UCAYF6ZY9gWBR1GW3R7PX7yw"
                ignoreLastChecked:
                  type: boolean
                  description: When true, ignores the last checked timestamp and processes all videos in the RSS feed. Useful for debugging and testing.
                  default: false
                  example: false
                maxItems:
                  type: integer
                  description: Optional maximum number of new videos to process per channel. When set to 0 or omitted, all videos are processed. Values greater than 0 will stop processing once the limit is reached.
                  minimum: 0
                  default: 0
                  example: 10
            examples:
              basic_run:
                summary: Basic newsletter run
                value: {}
              specific_channel:
                summary: Run for specific channel only
                value:
                  channelId: "UCAYF6ZY9gWBR1GW3R7PX7yw"
              debug_mode:
                summary: Debug mode - ignore last checked timestamps
                value:
                  ignoreLastChecked: true
                  maxItems: 5
              limited_processing:
                summary: Limit processing to 10 new videos per channel
                value:
                  maxItems: 10
      responses:
        '200':
          description: Newsletter run triggered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewsletterRunResponse'
              example:
                message: "Newsletter run completed"
                channelsProcessed: 5
                channelsWithError: 0
                newVideosFound: 3
                emailSent: true
        '400':
          description: Bad request - invalid channel ID format if provided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /videos:
    get:
      summary: Get all videos
      description: |
        Retrieve all videos from the video store. Videos are sorted by published date (newest first).
        
        By default, returns cached videos. Use the `refresh=true` query parameter to fetch the latest 
        videos from all subscribed channels' RSS feeds.
      tags:
        - Videos
      parameters:
        - name: refresh
          in: query
          required: false
          description: |
            When set to true, fetches fresh video data from RSS feeds instead of returning cached data.
            This will get the most recent video from each subscribed channel.
          schema:
            type: boolean
            default: false
          example: true
      responses:
        '200':
          description: Successfully retrieved videos.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideosResponse'
              example:
                videos:
                  - id: "yt:video:dQw4w9WgXcQ"
                    title: "Amazing Video Title"
                    link:
                      href: "https://www.youtube.com/watch?v=dQw4w9WgXcQ"
                      rel: "alternate"
                    publishedAt: "2024-01-15T10:30:00Z"
                    content: "Video description content here"
                    author:
                      name: "Channel Name"
                      uri: "https://www.youtube.com/channel/UCAYF6ZY9gWBR1GW3R7PX7yw"
                    mediaGroup:
                      mediaThumbnail:
                        url: "https://i.ytimg.com/vi/dQw4w9WgXcQ/hqdefault.jpg"
                        width: "480"
                        height: "360"
                      mediaTitle: "Amazing Video Title"
                      mediaContent:
                        url: "https://www.youtube.com/v/dQw4w9WgXcQ?version=3"
                        type: "application/x-shockwave-flash"
                        width: "640"
                        height: "390"
                      mediaDescription: "Video description content here"
                    channelId: "UCAYF6ZY9gWBR1GW3R7PX7yw"
                    channelTitle: "Channel Name"
                    cachedAt: "2024-01-15T10:35:00Z"
                    duration: 300
                    tags: ["technology", "tutorial"]
                    topComments: ["Great video!", "Very helpful"]
                    autoSubtitles: "https://example.com/subtitles.vtt"
                totalCount: 1
                lastRefresh: "2024-01-15T10:35:00Z"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /videos/{videoId}/watch:
    post:
      summary: Mark a video as watched
      description: Sets the 'watched' status of a video to true.
      tags:
        - Videos
      parameters:
        - name: videoId
          in: path
          required: true
          description: The ID of the video to mark as watched. This is the `yt:video:` prefixed ID.
          schema:
            type: string
            pattern: '^yt:video:[a-zA-Z0-9_-]{11}$'
          example: "yt:video:dQw4w9WgXcQ"
      responses:
        '204':
          description: Video successfully marked as watched. No content returned.
        '400':
          description: Bad request - Invalid video ID format.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                message: "Invalid video ID format. Video ID should start with 'yt:video:' and be followed by 11 characters."
        '404':
          description: Video not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                message: "Video with ID 'yt:video:xxxxxxxxxxx' not found."
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    ChannelResponse:
      type: object
      required:
        - id
        - title
        - createdAt
        - isActive
        - videoCount
      properties:
        id:
          type: string
          description: YouTube channel ID
          pattern: '^UC[a-zA-Z0-9_-]{22}$'
          example: "UCAYF6ZY9gWBR1GW3R7PX7yw"
        title:
          type: string
          description: Channel title
          example: "Majuular"
        customUrl:
          type: string
          description: Custom channel URL (if available)
          example: "@majuular"
        thumbnailUrl:
          type: string
          description: Channel thumbnail URL (if available)
          example: "https://yt3.ggpht.com/example.jpg"
        createdAt:
          type: string
          format: date-time
          description: When the channel was added to monitoring
          example: "2024-01-15T10:00:00Z"
        lastVideoPublishedAt:
          type: string
          format: date-time
          description: When the last video was published (if available)
          example: "2024-01-15T09:30:00Z"
        videoCount:
          type: integer
          description: Number of videos currently cached for this channel
          example: 5
        isActive:
          type: boolean
          description: Whether the channel is actively being monitored
          example: true

    ChannelsResponse:
      type: object
      required:
        - channels
        - totalCount
        - lastUpdated
      properties:
        channels:
          type: array
          description: List of monitored channels
          items:
            $ref: '#/components/schemas/ChannelResponse'
        totalCount:
          type: integer
          description: Total number of channels
          example: 5
        lastUpdated:
          type: string
          format: date-time
          description: When this response was generated
          example: "2024-01-15T10:00:00Z"
      
    ChannelRequest:
      type: object
      required:
        - url
      properties:
        url:
          type: string
          description: |
            YouTube channel URL or channel ID. Supported formats:
            - https://www.youtube.com/channel/CHANNEL_ID
            - Direct channel ID (starts with 'UC')
          example: "https://www.youtube.com/channel/UCAYF6ZY9gWBR1GW3R7PX7yw"
        title:
          type: string
          description: Optional channel title. If omitted, the backend will attempt to fetch it from the RSS feed.
          example: "Majuular"
    
    ConfigInterval:
      type: object
      required:
        - interval
      properties:
        interval:
          type: string
          description: |
            Check interval in Go duration format.
            Valid range: 1m to 24h
          pattern: '^(\d+[smh])+$'
          example: "1h"
    
    Error:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          description: Error message describing what went wrong
          example: "Invalid channel ID format"

    ImportChannelsRequest:
      type: object
      required:
        - channels
      properties:
        channels:
          type: array
          description: List of channels to import
          items:
            $ref: '#/components/schemas/ChannelImport'

    ChannelImport:
      type: object
      required:
        - url
      properties:
        url:
          type: string
          description: |
            YouTube channel URL or channel ID. Supported formats:
            - https://www.youtube.com/channel/CHANNEL_ID
            - Direct channel ID (starts with 'UC')
          example: "https://www.youtube.com/channel/UCAYF6ZY9gWBR1GW3R7PX7yw"
        title:
          type: string
          description: Optional channel title. If omitted, the backend will attempt to fetch it from the RSS feed.
          example: "Majuular"

    ImportChannelsResponse:
      type: object
      required:
        - imported
        - failed
      properties:
        imported:
          type: array
          description: List of channels successfully imported
          items:
            $ref: '#/components/schemas/ChannelResponse'
        failed:
          type: array
          description: List of channels that failed to import and the reason for failure
          items:
            $ref: '#/components/schemas/ImportFailure'

    ImportFailure:
      type: object
      required:
        - channel
        - error
      properties:
        channel:
          $ref: '#/components/schemas/ChannelImport'
          description: The channel data that failed to import
        error:
          type: string
          description: The reason the channel failed to import
          example: "invalid channel ID format"

    NewsletterRunResponse:
      type: object
      required:
        - message
        - channelsProcessed
        - channelsWithError
        - newVideosFound
        - emailSent
      properties:
        message:
          type: string
          description: Status message about the newsletter run
          example: "Newsletter run completed"
        channelsProcessed:
          type: integer
          description: Number of channels successfully processed
          example: 5
        channelsWithError:
          type: integer
          description: Number of channels that encountered errors
          example: 0
        newVideosFound:
          type: integer
          description: Total number of new videos found across all channels
          example: 3
        emailSent:
          type: boolean
          description: Whether an email notification was sent
          example: true

    VideosResponse:
      type: object
      required:
        - videos
        - totalCount
        - lastRefresh
      properties:
        videos:
          type: array
          description: List of videos with enhanced metadata
          items:
            $ref: '#/components/schemas/VideoResponse'
        totalCount:
          type: integer
          description: Total number of videos returned
          example: 10
        lastRefresh:
          type: string
          format: date-time
          description: When the video data was last refreshed
          example: "2024-01-15T10:35:00Z"
        pagination:
          $ref: '#/components/schemas/Pagination'

    VideoResponse:
      type: object
      required:
        - id
        - title
        - link
        - publishedAt
        - content
        - author
        - mediaGroup
        - channelId
        - channelTitle
        - cachedAt
      properties:
        id:
          type: string
          description: "Video ID with yt:video: prefix"
          example: "yt:video:dQw4w9WgXcQ"
        title:
          type: string
          description: Video title
          example: "Amazing Video Title"
        link:
          $ref: '#/components/schemas/VideoLink'
        publishedAt:
          type: string
          format: date-time
          description: Video publication date
          example: "2024-01-15T10:30:00Z"
        content:
          type: string
          description: Video description content
          example: "Video description content here"
        author:
          $ref: '#/components/schemas/VideoAuthor'
        mediaGroup:
          $ref: '#/components/schemas/VideoMediaGroup'
        channelId:
          type: string
          description: YouTube channel ID
          pattern: '^UC[a-zA-Z0-9_-]{22}$'
          example: "UCAYF6ZY9gWBR1GW3R7PX7yw"
        channelTitle:
          type: string
          description: Channel title for easy reference
          example: "Channel Name"
        cachedAt:
          type: string
          format: date-time
          description: When this video was cached
          example: "2024-01-15T10:35:00Z"
        duration:
          type: integer
          description: Video duration in seconds (from yt-dlp enhancement)
          example: 300
        tags:
          type: array
          items:
            type: string
          description: Video tags (from yt-dlp enhancement)
          example: ["technology", "tutorial"]
        topComments:
          type: array
          items:
            type: string
          description: Top comments (from yt-dlp enhancement)
          example: ["Great video!", "Very helpful"]
        autoSubtitles:
          type: string
          description: URL to auto-generated subtitles (from yt-dlp enhancement)
          example: "https://example.com/subtitles.vtt"

    VideoLink:
      type: object
      required:
        - href
        - rel
      properties:
        href:
          type: string
          description: Video URL
          example: "https://www.youtube.com/watch?v=dQw4w9WgXcQ"
        rel:
          type: string
          description: Link relation type
          example: "alternate"

    VideoAuthor:
      type: object
      required:
        - name
        - uri
      properties:
        name:
          type: string
          description: Video author name
          example: "Channel Name"
        uri:
          type: string
          description: Video author URI
          example: "https://www.youtube.com/channel/UCAYF6ZY9gWBR1GW3R7PX7yw"

    VideoMediaGroup:
      type: object
      required:
        - mediaThumbnail
        - mediaTitle
        - mediaContent
        - mediaDescription
      properties:
        mediaThumbnail:
          $ref: '#/components/schemas/VideoMediaThumbnail'
        mediaTitle:
          type: string
          description: Video title
          example: "Amazing Video Title"
        mediaContent:
          $ref: '#/components/schemas/VideoMediaContent'
        mediaDescription:
          type: string
          description: Video description
          example: "Video description content here"

    VideoMediaThumbnail:
      type: object
      required:
        - url
        - width
        - height
      properties:
        url:
          type: string
          description: Video thumbnail URL
          example: "https://i.ytimg.com/vi/dQw4w9WgXcQ/hqdefault.jpg"
        width:
          type: string
          description: Video thumbnail width
          example: "480"
        height:
          type: string
          description: Video thumbnail height
          example: "360"

    VideoMediaContent:
      type: object
      required:
        - url
        - type
        - width
        - height
      properties:
        url:
          type: string
          description: Video content URL
          example: "https://www.youtube.com/v/dQw4w9WgXcQ?version=3"
        type:
          type: string
          description: Video content type
          example: "application/x-shockwave-flash"
        width:
          type: string
          description: Video content width
          example: "640"
        height:
          type: string
          description: Video content height
          example: "390"

    Pagination:
      type: object
      required:
        - currentPage
        - totalPages
        - totalItems
        - itemsPerPage
        - hasNext
        - hasPrevious
      properties:
        currentPage:
          type: integer
          description: Current page number
          example: 1
        totalPages:
          type: integer
          description: Total number of pages
          example: 5
        totalItems:
          type: integer
          description: Total number of items across all pages
          example: 50
        itemsPerPage:
          type: integer
          description: Number of items per page
          example: 10
        hasNext:
          type: boolean
          description: Whether there is a next page
          example: true
        hasPrevious:
          type: boolean
          description: Whether there is a previous page
          example: false

tags:
  - name: Channels
    description: Operations for managing YouTube channel subscriptions
  - name: Configuration
    description: Operations for configuring the monitoring settings 
  - name: Newsletter
    description: Operations for managing and triggering newsletter functions
  - name: Videos
    description: Operations for managing and retrieving video data 